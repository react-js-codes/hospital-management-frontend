{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suresh\\\\hospital-management\\\\frontend\\\\src\\\\pages\\\\Patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/patients', {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    }).then(res => setPatients(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Patient List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-2\",\n        children: [patient.name, \", \", patient.age, \", \", patient.condition, \"// In your component file\", /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"patient-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Condition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.condition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 9\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 1\n        }, this)]\n      }, patient._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PatientList","_s","patients","setPatients","get","headers","localStorage","getItem","then","res","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","name","age","condition","id","_id","_c","$RefreshReg$"],"sources":["C:/Users/Suresh/hospital-management/frontend/src/pages/Patients/PatientList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PatientList = () => {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/patients', {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n    }).then((res) => setPatients(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Patient List</h2>\r\n      <ul className=\"space-y-2\">\r\n        {patients.map((patient) => (\r\n          <li key={patient._id} className=\"border p-2\">\r\n            {patient.name}, {patient.age}, {patient.condition}\r\n\r\n            // In your component file\r\n<table className=\"patient-table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Age</th>\r\n      <th>Condition</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {patients.map((patient) => (\r\n      <tr key={patient.id}>\r\n        <td>{patient.name}</td>\r\n        <td>{patient.age}</td>\r\n        <td>{patient.condition}</td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n</table>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}